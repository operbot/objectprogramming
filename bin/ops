#!/usr/bin/env python3
# This file is placed in the Public Domain.
# pylint: disable=C0115,C0116,C0413


"object programming shell"


import importlib
import os
import readline
import sys
import termios
import time
import traceback


sys.path.insert(0, os.getcwd())


from op.handler import Command, Event, Handler, scan, scandir
from op.object import Wd, printable


from opm import cmds


Wd.workdir = os.path.expanduser("~/.objectprogramming")


class Shell(Handler):

    def poll(self):
        event = Event()
        event.bot = self
        event.txt = input("> ")
        event.orig = repr(self)
        return event

    def raw(self, txt):
        print(txt)


def banner(cfg):
    print(
          "OPS started at %s %s" % (
                                   time.ctime(time.time()).replace("  ", " "),
                                   printable(cfg, "debug,verbose")
                                  )
         )


def importer(packagename, modulename, path=None):
    if not path:
        path = packagename
    name = "%s.%s" % (packagename, modulename)
    try:
        mod = importlib.import_module(name, packagename)
        scan(mod)
    except ModuleNotFoundError:
        pass


def print_exc(ex):
    traceback.print_exception(type(ex), ex, ex.__traceback__)


def wrap(func):
    fds = sys.stdin.fileno()
    gotterm = True
    try:
        old = termios.tcgetattr(fds)
    except termios.error:
        gotterm = False
    readline.redisplay()
    try:
        func()
    except (EOFError, KeyboardInterrupt):
        print("")
    finally:
        if gotterm:
            termios.tcsetattr(fds, termios.TCSADRAIN, old)
        for evt in Command.errors:
            print_exc(evt.__exc__)


def main():
    banner("ops")
    scandir("mod", importer)
    scan(cmds)
    shl = Shell()
    shl.start()
    shl.wait()


if __name__ == "__main__":
    wrap(main)
